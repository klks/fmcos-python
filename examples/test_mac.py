import sys
import os
import traceback
from Crypto.Cipher import DES
from fmcos import CPUFileType, KeyType, BalanceType, parse_return_code, FMCOS
from utils import bytes_to_hexstr, assert_success

DEBUG_FMCOS = True
DEBUG_PN532 = False

if __name__ == '__main__':
    exam = FMCOS(DEBUG_FMCOS, DEBUG_PN532)

    key_all_ffs = b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff"

    print("->")
    ret = exam.fmcos_3des_mac(buf=b"\x04\xd6\x00\x00\x14\x11\x22\x33\x44\x55\x66\x77\x88\x99\x00\xaa\xbb\xcc\xdd\xee\xff", \
                             iv=b"\x44\xa4\x7d\xeb\x00\x00\x00\x00", key=b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")
    print(bytes_to_hexstr(ret))
    assert ret == b"\xf2\xf6\x22\x31", f"MAC does not match"

    print("->")
    ret = exam.fmcos_3des_mac(buf=b"\x11\x22\x33\x44\x55\x66\x77\x88\x99\x00\xaa\xbb\xcc\xdd\xee\xff", iv=b"\xd0\xfe\x4f\xb9\x00\x00\x00\x00", \
                            key=b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")
    print(bytes_to_hexstr(ret))
    assert ret == b"\x8d\x31\x85\x77", f"MAC does not match"

    print("->")
    ret = exam.fmcos_3des_mac(buf=b"\x04\xb0\x00\x00\x04", iv=b"\xd0\xfe\x4f\xb9\x00\x00\x00\x00", key=b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")
    print(bytes_to_hexstr(ret))
    assert ret == b"\xf0\x9c\x8a\x19", f"MAC does not match"

    print("->")
    ret = exam.fmcos_3des_mac(buf=b"\x04\xD6\x95\x00\x22\x00\x01\x22\x00\x00\x01\xFF\xFF\x01\x01\x00\x00\x22\x00\x00\x00\x00\x00\x00\x06\x20\x16\x01\x01\x20\x50\x12\x31\x00\x00", \
                            iv=b"\xa3\xbb\xcf\xc8\x00\x00\x00\x00", key=b"\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36")
    print(bytes_to_hexstr(ret))
    assert ret == b"\x96\xe3\x2e\xf1", f"MAC does not match"

    print("->")
    ret = exam.fmcos_3des_mac(buf=b"\x04\xD6\x85\x00\x34\x00\x01\x22\x00\x00\x01\xFF\xFF\x22\x00\x00\x00\x00\x00\x00\x06\x00\x01\x20\x16\x10\x28\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x50\x12\x31", \
                            iv=b"\x88\xbb\xe4\xe3\x00\x00\x00\x00", key=b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")
    print(bytes_to_hexstr(ret))
    assert ret == b"\xae\x8d\x87\x74", f"MAC does not match"
